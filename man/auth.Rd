% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auth-client.R, R/auth.R
\name{auth_client_auth_request}
\alias{auth_client_auth_request}
\alias{lastfm_auth}
\alias{fetch_request_token}
\alias{request_user_auth}
\alias{fetch_auth_token}
\title{Access Token Management}
\usage{
auth_client_auth_request(req, auth_client = lastfm_auth_client(), .sign = TRUE)

lastfm_auth(
  auth_client = lastfm_auth_client(),
  .skip_auth = FALSE,
  .auth = "default"
)

fetch_request_token(auth_client = lastfm_auth_client())

request_user_auth(request_token, auth_client = lastfm_auth_client())

fetch_auth_token(request_token, auth_client = lastfm_auth_client())
}
\arguments{
\item{auth_client}{An lastfm_auth_client object built with \code{\link[=lastfm_auth_client]{lastfm_auth_client()}} function}

\item{.skip_auth}{Whether to skip the user authorization request, FALSE by default.}

\item{.auth}{Name of authentication identity as a string, defaults to \code{default}}

\item{request_token}{String containing the request token obtained with \code{\link[=fetch_request_token]{fetch_request_token()}}}
}
\value{
\itemize{
\item \code{fetch_request_token()} and \code{fetch_web_session()} return strings
}
}
\description{
lastfmr implements the desktop application authentication method specified
in the \href{https://www.last.fm/api/desktopauth}{API documentation}.
}
\section{Authentication Workflow}{
The authentication workflow is execute by a call to \code{\link[=lastfm_auth]{lastfm_auth()}} which invokes
the full workflow:
\enumerate{
\item \code{\link[=fetch_request_token]{fetch_request_token()}} creates a request token for the specific API request, this authenticates a
particular API request and lasts for 60 minutes.
\item \code{\link[=request_user_auth]{request_user_auth()}} launches a browser to request end-user authorization
for access to user account data through the browser. The token created in
the first step is provided as part of the user authorization request to
associate the Application API Key with the user account providing
authorization.
\item \code{\link[=fetch_web_session]{fetch_web_session()}} fetches a session token to be used with all
end-user requests. This is done by providing the application API key and
the request token. The endpoint returns an encrypted session token that
can be attached to all user requests.
}
}

\keyword{internal}
